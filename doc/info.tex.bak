\documentclass[11pt,includemp,a4paper]{article}
\usepackage{CJK}
\usepackage{pstricks}
\usepackage{fancyhdr}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{hyperref}
\usepackage{fancyvrb}
%\pagestyle{fancy} \markboth{}{Junhua Gu 0060729005
%\\E-mail:tompkins@sjtu.edu.cn}

\DefineVerbatimEnvironment{srcenv}{Verbatim}
{frame=single,baselinestretch=1, fontsize=\small,
xleftmargin=0pt,xrightmargin=0pt,numbers=left }

\DefineVerbatimEnvironment{cmdenv}{Verbatim}
{frame=single,baselinestretch=1, fontsize=\small,
xleftmargin=0pt,xrightmargin=0pt }

\setlength{\parindent}{12pt} \setlength{\parskip}{3pt plus1pt
minus2pt} \setlength{\baselineskip}{20pt plus2pt minus1pt}
\setlength{\textheight}{21true cm}
\setlength{\textwidth}{14.5truecm} \setlength{\topmargin}{1cm}
\setlength{\oddsidemargin}{1cm} \setlength{\parindent}{.75cm}
\setlength{\unitlength}{1cm}



\author{}



\begin{document}
\begin{CJK*}{GBK}{song}

%\title{自然辩证法}
%\maketitle

\begin{center}
\LARGE FITSIO C++ 接口库libfio使用说明\\
\Large 顾俊骅\\
\large v.1.1 \today\\[.5cm]

\end{center}
\tableofcontents \clearpage
\section{功能描述}
libfio是一个cfitsio软件包在C++语言上的包装。通过libfio可以在C++语言中方便
地操纵fits格式的文件，主要是fits图像。隐藏了cfitsio库中所要求的C语言指针语法，
通过libfio可以大大地提高语言效率，精简程序长度。

\section{安装}
假定fio-x.x.tar.gz
(x.x与版本相关)已经被放置在当前目录下，运行一下命令:
\begin{cmdenv}
>tar xvzf fio-x.x.tar.gz
>cd fio
>tar xvzf blitz-0.9.tar.gz
>cd ..
\end{cmdenv}
就形成以下的目录树
\begin{itemize}

\item[+] fio
    \begin{itemize}
    \item[-] blitz-0.9/
    \item[-] doc/
    \item[\bullet] fio.cc
    \item fio.h
    \item fits2txt.cc
    \item fitsfile.cc
    \item fitsfile.h
    \item fits\_trait.cc
    \item fits\_trait.h
    \item libfio.cc
    \item makefile
    \item README.pdf
    \item region.cc
    \item region.h
    \item region\_imp.cc
    \item region\_imp.h
    \item txt2fits.cc
    \end{itemize}
\end{itemize}
libfio需要用到cfitsio和blitz++两个库，\\
1.安装blitz++库:\\
\begin{cmdenv}
>cd fio/
>cd blitz-0.9
>./configure
>make
>su (切换成root)
> (输入密码)
>make install
\end{cmdenv}
2.保持root身份，设置fitsio \\
若机器上已经安装了heasoft，则不用安装新的fitsio只需作如下的设置即可:\\
找到机器上fitsio.h、cfitsio.h、longnam.h所在的位置，这些文件通常位于 heasoft/Linux\_2.4 \_i686/include下\\
\begin{cmdenv}
>cd /usr/include/
>ln -s <where fitsio.h is>/fitsio.h
>ln -s <where cfitsio.h is>/cfitsio.h
>ln -s <where longnam.h is>/longnam.h
\end{cmdenv}
找到机器上libcfitsio.a和libcfitsio.so，该文件通常位于heasoft/Linux\_2.4\_i686/lib下\\
\begin{cmdenv}
>cd /usr/lib
>ln -s <where libcfitsio.a is>/libcfitsio.a
>ln -s <where libcfitsio.so is>/libcfitsio.so
>exit #退出root状态]
\end{cmdenv}
3.安装libfio包，进入刚才解压之后生成的fio目录下，注意，不是先前进行make的blitz目录\\
\begin{cmdenv}
>make clean
>make
\end{cmdenv}
 进行编译 然后以超root身份执行以下命令：
\begin{cmdenv}
>cp *.h /usr/include/
>cp libfio.so /usr/lib/
\end{cmdenv}
即安装完成。\\[1cm]
4.fits/文本文件转换工具的安装:\\
fio库中有两个用于fits图像文件和文本文件相互转换的程序分别是txt2fits和fits2txt
如果要使用这两个程序，需要将它们复制到/usr/bin目录下，以下命令仍旧在fio目录下运行，并保持root身份。\\
\begin{cmdenv}
>cp txt2fits /usr/bin/
>cp fits2txt /usr/bin/
\end{cmdenv}

\section{fits/文本文件转换工具的使用}
如果进行了以上安装过程的第4步，则可以调用txt2fits和fits2txt进行fits图像文件和文本文件之间的转换。\\
fits2txt可以将一个fits图像转换为文本文件，这个文本文件的第一和第二个数值存放了这个
图像的行数和列数，然后按照各行依次存放每一个pixel上的数值。其的调用方法如下:\\
假定有一个fits文件，名为a.fits，希望将其转换为一个名为a.txt的文本文件\\
\begin{cmdenv}
>fits2txt a.fits a.txt
\end{cmdenv}
txt2fits可以将一个符合上述格式的文本文件转换成一个fits图像。其调用方法如下:\\
假定将上面生成的a.txt转换为另一个fits文件b.fits:\\
\begin{cmdenv}
>txt2fits a.txt b.fits
\end{cmdenv}
\section{libfio库的调用--如何编写自己的程序}
通过将fio目录下的txt2fits.cc或者fits2txt.cc复制到其他位置，并进行修改，可以快速
生成自己的调用libfio的程序。在其他位置对一个调用了libfio的程序进行编译的步骤如下:
\subsection{用户程序的编译--如何编译调用libfio的程序}
以编译上述fits/文本文件转换工具为例，若将这两个程序的源文件复制到其他目录，则可以
通过一下命令进行编译:\\
g++ txt2fits.cc -o txt2fits -I/usr/local/include -L/usr/local/lib
-lfio -lcfitsio\\
g++ fits2txt.cc -o fits2txt -I/usr/local/include -L/usr/local/lib
-lfio -lcfitsio\\[1cm]
也可以写一个makefile，针对上情况的一个makefile可以这样写，并且把这个makefile放在和
源文件相同的目录下:\\
\begin{srcenv}
target: txt2fits fits2txt

txt2fits:txt2fits.cc
<press TAB key once>g++ txt2fits.cc -o\
txt2fits\ -I/usr/local/include -L/usr/local/lib -lfio -lcfitsio

fits2txt:fits2txt.cc
<press TAB key once>g++ fits2txt.cc -o\
fits2txt\ -I/usr/local/include -L/usr/local/lib -lfio -lcfitsio
\end{srcenv}
\vspace{1cm}
如果编译其他名称的源程序，可以对makefile作相应的调整。make文件写好之后，就可以直接
键入make进行编译。

\subsection{头文件的包含}
要使用libfio，在每个C++源程序文件中都要包含$<$fio.h$>$文件，通常而言，还需要写\\
using namespace blitz\\


\subsection{库接口使用方法}
以下是一个实际的程序，通过对这个程序的分析，来解释libfio库的典型调用语法。\\
\begin{srcenv}
#include<fio.h>//包含fio头文件
#include<iostream>//包含C++输入输出库
#include<cmath>//包含标准库数学头文件

using namespace std;
using namespace blitz;
//主程序开始
int main(int argc,char* argv[])
//argc和argv用于获得命令行参数
//argc是命令行参数的个数
//argv[0],argv[1],argv[2],...,argv[argc-1]是各个参数字符串
//例如:./a.out xxx yyy zzz
//则argc=4,argv[0]="./a.out",argv[1]="xxx",argv[2]="yyy",argv[3]="zzz"
{
    cfitsfile ff1;      //声明一个用于操纵fits文件的对象。
    ff1.open("a.fits"); //打开一个已经存在的fits文件。
    Array<double,2> img1;   //声明一个用于存放图像的矩阵。
    ff1>>img1;              //将数据从fits文件导入到矩阵中。

    //这里可以对这个矩阵中的数据进行任意的操纵。
    //假定这里计算输入图像的泊松误差：
    Array<double,2> img2(img1.shape());
    //注意C/C++的数组指标是从0开始
    for(int i=0;i<img2.extent(0);++i)
    {
        for(int j=0;j<img2.extent(1);++j)
        {
            img2(i,j)=sqrt(img1(i,j));
        }
    }

    cfitsfile ff2;      //声明另一个用于操纵fits文件的对象。
    ff2.create("b.fits");//创建一个fits文件，如果已经存在，就先删除，然后再创建。
    ff2<<img2;          //将数据从矩阵导出到fits文件中去。
}
//程序结束
//EOF

\end{srcenv}

以下是对libfio库中所提供的一个进行fits/文本文件格式转换的工具fits2txt的分析，这个
实例读入一个fits图像文件，然后将其数据写入一个文本文件。源文件为
fio目录下的fits2txt.cc
\begin{srcenv}
#include <iostream>
#include <cmath>
#include <cstdlib>
#include<utility>
#include <fstream>
#include "fio.h"
#include <cassert>
#include <vector>

using namespace std;

using namespace ::blitz;



int main(int argc,char* argv[])
{
    //检查用户提供的参数是否符合要求

  if(argc!=3)
    {
      cerr<<argv[0]<<" <input fits file> <output text file>"<<endl;
      return -1;
    }
  //定义一个fitsfile对象，用于读入fits图像文件
  cfitsfile ff;
  //打开文件，文件名就是用户提供的第一个参数

  ff.open(argv[1]);

  //定义一个而为矩阵，名字为img
  Array<double,2> img;
  //将数据从fits文件读入img
  ff>>img;

  //定义一个对象用于操作磁盘上的文本文件
  ofstream ofs(argv[2]);

  //首先将图像文件的高和宽写入文本文件
  ofs<<img.extent(0)<<"\t"<<img.extent(1)<<endl;;

  //遍历所有的矩阵元素，将其依次写入fits文件
  for(int i=0;i!=img.extent(0);++i)
    {
      for(int j=0;j!=img.extent(1);++j)
        {
            ofs<<img(i,j)<<" ";
        }
        ofs<<endl;
    }
  //done
}

\end{srcenv}

\clearpage
\section{历史}
2007 Jun 07th -- libfio v.1.0 released\\
2007 Sep 29th -- libfio v.1.1 released
完善了文档中关于安装的描述，增加了txt2fits和fits2txt两个工具，用于fits图像文件和文本文件之间的转换，并在
文档中增加了相应的说明。

\end{CJK*}

\end{document}
%EOF
